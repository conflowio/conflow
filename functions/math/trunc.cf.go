// Code generated by Conflow. DO NOT EDIT.

package math

import (
	"github.com/conflowio/conflow/conflow/schema"
)

// TruncInterpreter is the conflow interpreter for the Trunc function
type TruncInterpreter struct {
	s schema.Schema
}

func (i TruncInterpreter) Schema() schema.Schema {
	if i.s == nil {
		i.s = &schema.Function{
			Metadata: schema.Metadata{
				Description: "It returns the integer value of x.",
			},
			Parameters: schema.Parameters{
				schema.NamedSchema{
					Name:   "x",
					Schema: &schema.Number{},
				},
			},
			Result: &schema.Number{},
		}
	}
	return i.s
}

// Eval returns with the result of the function
func (i TruncInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = args[0].(float64)
	return Trunc(val0), nil
}

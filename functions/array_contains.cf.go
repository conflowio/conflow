// Code generated by Conflow. DO NOT EDIT.

package functions

import (
	"github.com/conflowio/conflow/conflow/schema"
)

// ArrayContainsInterpreter is the conflow interpreter for the ArrayContains function
type ArrayContainsInterpreter struct {
	s schema.Schema
}

func (i ArrayContainsInterpreter) Schema() schema.Schema {
	if i.s == nil {
		i.s = &schema.Function{
			Metadata: schema.Metadata{
				Description: "It returns true if the array contains the given element",
			},
			Parameters: schema.Parameters{
				schema.NamedSchema{
					Name: "arr",
					Schema: &schema.Array{
						Items: &schema.Untyped{},
					},
				},
				schema.NamedSchema{
					Name:   "elem",
					Schema: &schema.Untyped{},
				},
			},
			Result: &schema.Boolean{},
		}
	}
	return i.s
}

// Eval returns with the result of the function
func (i ArrayContainsInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = args[0].([]interface{})
	var val1 = args[1]
	return ArrayContains(val0, val1)
}

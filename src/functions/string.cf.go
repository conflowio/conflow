// Code generated by Conflow. DO NOT EDIT.

package functions

import (
	"github.com/conflowio/conflow/src/schema"
)

func init() {
	schema.Register(&schema.Function{
		Metadata: schema.Metadata{
			Description: "It converts the given value to a string",
			ID:          "github.com/conflowio/conflow/src/functions.String",
		},
		Parameters: schema.Parameters{
			schema.NamedSchema{
				Name:   "value",
				Schema: &schema.Untyped{},
			},
		},
		Result: &schema.String{},
	})
}

// StringInterpreter is the Conflow interpreter for the String function
type StringInterpreter struct {
}

func (i StringInterpreter) Schema() schema.Schema {
	s, _ := schema.Get("github.com/conflowio/conflow/src/functions.String")
	return s
}

// Eval returns with the result of the function
func (i StringInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = args[0]
	return String(val0)
}

// Code generated by Conflow. DO NOT EDIT.

package json

import (
	"github.com/conflowio/conflow/src/schema"
)

func init() {
	schema.Register(&schema.Function{
		Metadata: schema.Metadata{
			Description: "It converts the given value to a json string",
			ID:          "github.com/conflowio/conflow/src/functions/json.Encode",
		},
		Parameters: schema.Parameters{
			schema.NamedSchema{
				Name:   "value",
				Schema: &schema.Any{},
			},
		},
		Result: &schema.String{},
	})
}

// EncodeInterpreter is the Conflow interpreter for the Encode function
type EncodeInterpreter struct {
}

func (i EncodeInterpreter) Schema() schema.Schema {
	s, _ := schema.Get("github.com/conflowio/conflow/src/functions/json.Encode")
	return s
}

// Eval returns with the result of the function
func (i EncodeInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = args[0]
	return Encode(val0)
}

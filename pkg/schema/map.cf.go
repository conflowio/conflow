// Code generated by Conflow. DO NOT EDIT.

package schema

import (
	"github.com/conflowio/conflow/pkg/conflow/annotations"
)

func init() {
	Register(&Object{
		Metadata: Metadata{
			Annotations: map[string]string{
				annotations.Type: "configuration",
			},
			ID: "github.com/conflowio/conflow/pkg/schema.Map",
		},
		FieldNames:     map[string]string{"$id": "ID", "additionalProperties": "AdditionalProperties", "const": "Const", "default": "Default", "deprecated": "Deprecated", "description": "Description", "enum": "Enum", "examples": "Examples", "maxProperties": "MaxProperties", "minProperties": "MinProperties", "readOnly": "ReadOnly", "title": "Title", "writeOnly": "WriteOnly", "x-annotations": "Annotations"},
		ParameterNames: map[string]string{"$id": "id", "additionalProperties": "additional_properties", "maxProperties": "max_properties", "minProperties": "min_properties", "readOnly": "read_only", "writeOnly": "write_only", "x-annotations": "annotations"},
		Properties: map[string]Schema{
			"$id": &String{},
			"additionalProperties": &Reference{
				Ref: "github.com/conflowio/conflow/pkg/schema.Schema",
			},
			"const": &Map{
				AdditionalProperties: &Any{},
			},
			"default": &Map{
				AdditionalProperties: &Any{},
			},
			"deprecated":  &Boolean{},
			"description": &String{},
			"enum": &Array{
				Items: &Map{
					AdditionalProperties: &Any{},
				},
			},
			"examples": &Array{
				Items: &Any{},
			},
			"maxProperties": &Integer{
				Nullable: true,
			},
			"minProperties": &Integer{},
			"readOnly":      &Boolean{},
			"title":         &String{},
			"writeOnly":     &Boolean{},
			"x-annotations": &Map{
				AdditionalProperties: &String{},
			},
		},
		Required: []string{"additional_properties"},
	})
}

// NewMapWithDefaults creates a new Map instance with default values
func NewMapWithDefaults() *Map {
	b := &Map{}
	return b
}

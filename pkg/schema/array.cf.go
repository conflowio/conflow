// Code generated by Conflow. DO NOT EDIT.

package schema

import (
	"github.com/conflowio/conflow/pkg/conflow/annotations"
)

func init() {
	Register(&Object{
		Metadata: Metadata{
			Annotations: map[string]string{
				annotations.Type: "configuration",
			},
			ID: "github.com/conflowio/conflow/pkg/schema.Array",
		},
		FieldNames:     map[string]string{"$id": "ID", "const": "Const", "default": "Default", "deprecated": "Deprecated", "description": "Description", "enum": "Enum", "examples": "Examples", "items": "Items", "maxItems": "MaxItems", "minItems": "MinItems", "readOnly": "ReadOnly", "title": "Title", "uniqueItems": "UniqueItems", "writeOnly": "WriteOnly", "x-annotations": "Annotations"},
		ParameterNames: map[string]string{"$id": "id", "maxItems": "max_items", "minItems": "min_items", "readOnly": "read_only", "uniqueItems": "unique_items", "writeOnly": "write_only", "x-annotations": "annotations"},
		Properties: map[string]Schema{
			"$id": &String{},
			"const": &Array{
				Items: &Any{},
			},
			"default": &Array{
				Items: &Any{},
			},
			"deprecated":  &Boolean{},
			"description": &String{},
			"enum": &Array{
				Items: &Array{
					Items: &Any{},
				},
			},
			"examples": &Array{
				Items: &Any{},
			},
			"items": &Reference{
				Ref: "github.com/conflowio/conflow/pkg/schema.Schema",
			},
			"maxItems": &Integer{
				Nullable: true,
			},
			"minItems":    &Integer{},
			"readOnly":    &Boolean{},
			"title":       &String{},
			"uniqueItems": &Boolean{},
			"writeOnly":   &Boolean{},
			"x-annotations": &Map{
				AdditionalProperties: &String{},
			},
		},
		Required: []string{"items"},
	})
}

// NewArrayWithDefaults creates a new Array instance with default values
func NewArrayWithDefaults() *Array {
	b := &Array{}
	return b
}

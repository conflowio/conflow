// Code generated by Conflow. DO NOT EDIT.

package strings

import (
	"github.com/conflowio/conflow/pkg/schema"
)

func init() {
	schema.Register(&schema.Function{
		Metadata: schema.Metadata{
			Description: "It returns a slice of the string s, with all leading\nand trailing white space removed, as defined by Unicode.",
			ID:          "github.com/conflowio/conflow/pkg/functions/strings.TrimSpace",
		},
		Parameters: schema.Parameters{
			schema.NamedSchema{
				Name:   "s",
				Schema: &schema.String{},
			},
		},
		Result: &schema.String{},
	})
}

// TrimSpaceInterpreter is the Conflow interpreter for the TrimSpace function
type TrimSpaceInterpreter struct {
}

func (i TrimSpaceInterpreter) Schema() schema.Schema {
	s, _ := schema.Get("github.com/conflowio/conflow/pkg/functions/strings.TrimSpace")
	return s
}

// Eval returns with the result of the function
func (i TrimSpaceInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = args[0].(string)
	return TrimSpace(val0), nil
}

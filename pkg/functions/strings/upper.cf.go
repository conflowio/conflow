// Code generated by Conflow. DO NOT EDIT.

package strings

import (
	"github.com/conflowio/conflow/pkg/schema"
)

func init() {
	schema.Register(&schema.Function{
		Metadata: schema.Metadata{
			Description: "It returns a copy of the string s with all Unicode letters mapped to their upper case.",
			ID:          "github.com/conflowio/conflow/pkg/functions/strings.Upper",
		},
		Parameters: schema.Parameters{
			schema.NamedSchema{
				Name:   "s",
				Schema: &schema.String{},
			},
		},
		Result: &schema.String{},
	})
}

// UpperInterpreter is the Conflow interpreter for the Upper function
type UpperInterpreter struct {
}

func (i UpperInterpreter) Schema() schema.Schema {
	s, _ := schema.Get("github.com/conflowio/conflow/pkg/functions/strings.Upper")
	return s
}

// Eval returns with the result of the function
func (i UpperInterpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	var val0 = schema.Value[string](args[0])
	return Upper(val0), nil
}

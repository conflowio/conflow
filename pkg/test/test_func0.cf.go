// Code generated by Conflow. DO NOT EDIT.

package test

import (
	"github.com/conflowio/conflow/pkg/schema"
)

func init() {
	schema.Register(&schema.Function{
		Metadata: schema.Metadata{
			ID: "github.com/conflowio/conflow/pkg/test.testFunc0",
		},
		Result: &schema.String{},
	})
}

// TestFunc0Interpreter is the Conflow interpreter for the testFunc0 function
type TestFunc0Interpreter struct {
}

func (i TestFunc0Interpreter) Schema() schema.Schema {
	s, _ := schema.Get("github.com/conflowio/conflow/pkg/test.testFunc0")
	return s
}

// Eval returns with the result of the function
func (i TestFunc0Interpreter) Eval(ctx interface{}, args []interface{}) (interface{}, error) {
	return testFunc0(), nil
}

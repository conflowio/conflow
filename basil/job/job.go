// Copyright (c) 2017 Opsidian Ltd.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

package job

import "github.com/opsidian/basil/basil"

// New creates a new job
func New(name basil.ID, lightweight bool, f func()) basil.Job {
	return &job{
		name:        name,
		lightweight: lightweight,
		f:           f,
	}
}

type job struct {
	name        basil.ID
	id          basil.ID
	sem         Semaphore
	lightweight bool
	f           func()
}

// JobName returns the job name
func (j *job) JobName() basil.ID {
	return j.name
}

// JobID returns the job id
func (j *job) JobID() basil.ID {
	return j.id
}

// SetJobID sets the job id, usually generated by the scheduler
func (j *job) SetJobID(id basil.ID) {
	j.id = id
}

// Run runs the wrapped job if it wasn't cancelled
func (j *job) Run() {
	if !j.sem.Run() {
		return
	}

	j.f()
}

func (j *job) Cancel() bool {
	return j.sem.Cancel()
}

// Lightweight returns true if the job doesn't need to be scheduled on the main job queue
// These jobs will usually run in a goroutine.
func (j *job) Lightweight() bool {
	return j.lightweight
}
